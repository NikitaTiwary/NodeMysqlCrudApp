import { FilterQuery } from 'mongoose';
export interface IPopulate {
    select: string;
    path: string;
}
export interface IApiQuery {
    deleted?: string | boolean;
    filter?: string | null;
    limit?: string | number;
    offset?: string | number;
    populate?: IPopulate[] | [] | null;
    q?: string | null;
    select?: string | null;
    sort?: string | null;
    total?: string | number;
}
export interface IApiParsedQuery<T = unknown> {
    filter: Record<string, string> | null;
    limit: number;
    offset: number;
    populate: IPopulate[] | [] | null;
    q: FilterQuery<T>;
    select: Record<string, -1 | 1> | null;
    sort: Record<string, -1 | 1> | null;
    total: number;
    deleted: boolean;
}
export declare type ParseQueryFunction<T = unknown> = (query: IApiParsedQuery<T>) => IApiParsedQuery<T>;
//# sourceMappingURL=IApiQuery.d.ts.map